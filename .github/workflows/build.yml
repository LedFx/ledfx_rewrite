on:
  push:
    branches: [main]
  workflow_dispatch:

name: Build Binaries

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build Binary
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        goosarch:

          - 'android/arm64'
          - 'darwin/amd64'
          - 'darwin/arm64'
          - 'dragonfly/amd64'
          - 'freebsd/386'
          - 'freebsd/amd64'
          - 'freebsd/arm'
          - 'freebsd/arm64'
          - 'illumos/amd64'
          # - 'ios/amd64'
          # - 'ios/arm64'
          - 'js/wasm'
          - 'linux/386'
          - 'linux/amd64'
          - 'linux/arm'
          - 'linux/arm64'
          - 'linux/mips'
          - 'linux/mips64'
          - 'linux/mips64le'
          - 'linux/mipsle'
          - 'linux/ppc64'
          - 'linux/ppc64le'
          - 'linux/riscv64'
          - 'linux/s390x'
          - 'netbsd/386'
          - 'netbsd/amd64'
          - 'netbsd/arm'
          - 'netbsd/arm64'
          - 'openbsd/386'
          - 'openbsd/amd64'
          - 'openbsd/arm'
          - 'openbsd/arm64'
          - 'openbsd/mips64'
          - 'solaris/amd64'
          - 'windows/386'
          - 'windows/amd64'
          - 'windows/arm'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.5'
      - name: Get Build Matrix Info and Set Variables
        run: |

          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=ledfx-go-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV

          if [ $GOOS = "windows" ]; then
            BINARY_NAME+='.exe'
          fi

      - name: Install Required Dependencies
        run: |
          echo "Installing dependencies"
          sudo apt-get install gcc libgtk-3-dev libappindicator3-dev
      - name: Build for Windows
        run: |
          if [ ${{ env.GOOS }} = "windows" ]; then
            go build -o "$BINARY_NAME" -v -ldflags "-H=windowsgui"
          else
            go build -o "$BINARY_NAME" -v
          fi
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BINARY_NAME }}
          path: ./${{ env.BINARY_NAME }}
